name: üöÄ Release Android App

on:
  release:
    types: [published]

jobs:
  build-and-deploy:
    name: üèóÔ∏è Build and Deploy Production Release
    runs-on: ubuntu-latest
    steps:
      - name: üìÇ Checkout code
        uses: actions/checkout@v5
      
      - name: üöÄ Cache pub deps
        uses: actions/cache@v4
        with:
          path: ~/.pub-cache
          key: ${{ runner.os }}-pub-${{ hashFiles('**/pubspec.yaml') }}
          restore-keys: ${{ runner.os }}-pub-

      - name: ‚òï Setup Java
        uses: actions/setup-java@v5
        with:
          distribution: temurin
          java-version: '21'
          
      - name: üì± Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.35.3'
          channel: 'stable'
          cache: true
          
      - name: üì¶ Install dependencies
        run: flutter pub get

      - name: üìã Get version from pubspec
        id: version
        run: |
          VERSION=$(grep '^version:' pubspec.yaml | sed 's/version: //')
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "Version: $VERSION"

      - name: üîë Setup Keystore
        run: |
          echo "${{ secrets.ANDROID_KEYSTORE_BASE64 }}" | base64 -d > android/app/keystore.jks
          
      - name: üì± Build APK
        env:
          ANDROID_KEYSTORE_BASE64: ${{ secrets.ANDROID_KEYSTORE_BASE64 }}
          ANDROID_KEYSTORE_PASSWORD: ${{ secrets.ANDROID_KEYSTORE_PASSWORD }}
          ANDROID_KEY_ALIAS: ${{ secrets.ANDROID_KEY_ALIAS }}
          ANDROID_KEY_PASSWORD: ${{ secrets.ANDROID_KEY_PASSWORD }}
        run: flutter build apk --flavor prod --release --build-number=${{ github.run_number }}
        
      - name: üì¶ Build App Bundle
        env:
          ANDROID_KEYSTORE_BASE64: ${{ secrets.ANDROID_KEYSTORE_BASE64 }}
          ANDROID_KEYSTORE_PASSWORD: ${{ secrets.ANDROID_KEYSTORE_PASSWORD }}
          ANDROID_KEY_ALIAS: ${{ secrets.ANDROID_KEY_ALIAS }}
          ANDROID_KEY_PASSWORD: ${{ secrets.ANDROID_KEY_PASSWORD }}
        run: flutter build appbundle --flavor prod --release --build-number=${{ github.run_number }}
        
      - name: üîè Sign Release
        uses: r0adkll/sign-android-release@v1
        id: sign
        with:
          releaseDirectory: build/app/outputs/bundle/prodRelease
          signingKeyBase64: ${{ secrets.ANDROID_KEYSTORE_BASE64 }}
          alias: ${{ secrets.ANDROID_KEY_ALIAS }}
          keyStorePassword: ${{ secrets.ANDROID_KEYSTORE_PASSWORD }}
          keyPassword: ${{ secrets.ANDROID_KEY_PASSWORD }}

      - name: üì± Rename Release Assets
        run: |
          APK_NAME="dienstplan-${{ github.event.release.tag_name }}-prod-${{ github.run_number }}.apk"
          AAB_NAME="dienstplan-${{ github.event.release.tag_name }}-prod-${{ github.run_number }}.aab"
          
          cp build/app/outputs/flutter-apk/app-prod-release.apk "build/app/outputs/flutter-apk/$APK_NAME"
          cp build/app/outputs/bundle/prodRelease/app-prod-release.aab "build/app/outputs/bundle/prodRelease/$AAB_NAME"
          
          echo "APK_PATH=build/app/outputs/flutter-apk/$APK_NAME" >> $GITHUB_ENV
          echo "AAB_PATH=build/app/outputs/bundle/prodRelease/$AAB_NAME" >> $GITHUB_ENV

      - name: ‚¨ÜÔ∏è Upload Assets to Existing Release
        uses: softprops/action-gh-release@v2
        with:
          files: |
            ${{ env.APK_PATH }}
            ${{ env.AAB_PATH }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: üè™ Upload to Play Store
        uses: r0adkll/upload-google-play@v1
        with:
          serviceAccountJsonPlainText: ${{ secrets.PLAY_STORE_JSON_KEY }}
          packageName: io.scelus.dienstplan
          releaseFiles: build/app/outputs/bundle/prodRelease/app-prod-release.aab
          track: beta
          releaseName: ${{ github.ref_name }}
          status: completed 